/*
 * BACKGROUND UTIL - all mixin, map, variable, placeholder for styling css background
**/
/*
 * @desc: include background-color property in your css
 * @input: $color accepts string value ['cisco blue', 'lightest blue', 'indigo', 'red', 'green', 'orange', 'darkest gray', 'mid gray', 'light gray', 'lightest gray']
 * 			or any other color
 *		   $opacity accepts values from 0 to 1, default value is 1
 * @output: background with speficied color
 * @ex: { @include background-color('cisco blue', 1) } -> { background-color: rgba(0, 188, 235, 1); }
 */
/*
 * BORDER UTIL - all mixin, map, variable, placeholder for styling css border
 */
/*
 * @desc: include border property in your css
 * @input: $color accepts string value ['cisco blue', 'lightest blue', 'indigo', 'red', 'green', 'orange', 'darkest gray', 'mid gray', 'light gray', 'lightest gray']
 * 			or any other color
		    $edge accepts string value ['all', 'top', 'bottom', 'left', 'right', 'left right', 'right left', 'top bottom',
 *			'bottom top'], default value is 'all'
			$size accepts any size value, ex: 2px, 1em,  default value is 1px
			$style accepts string value ['dotted', 'none', 'hidden', 'dotted', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'], default value is 'solid'
 * @output: border property with specified color, edge, size and style
 * @ex: { @include border('cisco blue') } -> { border: 1px solid rgb(0, 188, 235); }
 */
html.coi .MuiInput-underline:before, html.coi .MuiInput-underline:after, html.coi .MuiInput-underline:hover:before {
  border-bottom: 1px solid get-color("light gray"); }

/*
 * BOX SHADOW UTIL - all mixin, map, variable, placeholder for styling css box shadow
**/
/*
 * @desc: COI, CiscoSans font declaration and styling
 */
@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-weight: 100;
  src: url("/static/fonts/CiscoSansTTExtraLight.woff2") format("woff2"), url("/static/fonts/CiscoSansTTExtraLight.woff") format("woff");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: oblique;
  font-weight: 100;
  src: url("/static/fonts/CiscoSansTTExtraLightOblique.woff2") format("woff2"), url("/static/fonts/CiscoSansTTExtraLightOblique.woff") format("woff");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-weight: 300;
  src: url("/static/fonts/CiscoSansTTLight.woff2") format("woff2"), url("/static/fonts/CiscoSansTTLight.woff") format("woff");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: oblique;
  font-weight: 300;
  src: url("/static/fonts/CiscoSansTTLightOblique.woff2") format("woff2"), url("/static/fonts/CiscoSansTTLightOblique.woff") format("woff");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-weight: 400;
  src: url("/static/fonts/CiscoSansTTRegular.woff2") format("woff2"), url("/static/fonts/CiscoSansTTRegular.woff") format("woff");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: bold;
  font-weight: 700;
  src: url("/static/fonts/CiscoSansTTBold.woff2") format("woff2"), url("/static/fonts/CiscoSansTTBold.woff") format("woff");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/*
 * DEVICE UTIL - all mixin, map, variable, placeholder for responding css media query
**/
/*
 * FONT UTIL - all mixin, map, variable, placeholder for styling css font
**/
/*
 * @desc: return coi custom defined font-family
 */
/*
 * @desc: return font sise in rem (speficied font size divided by root font size)
 */
/*
 * @desc: return font size in percentage (speficied font size divided by root)
 */
/*
 * @desc: include rem font-size in your css
 */
/*
 * @desc: include percent font-size in your css
 */
/*
 * @desc: wrapper function for rem-font-size with predefined values: xs, sm, md, lg, xl
 * @output: include 'font-size: rem' in your css
 */
/*
 * @desc: include font-weight property in your css
 * @input: $weight accepts string value ['normal', 'bold', 'semibold', 'semilight', 'light']
 *		   $base accepts any integer value, default value is 100
 * @output: font with speficied weight;
 * @ex: { @include font-weight('bold') } -> { font-weight: 700; }
 */
/*
 * @desc: include primary (sans-serif) font-family in your css
 */
html.coi .MuiInputBase-root {
  font-family: "CiscoSans", Roboto, Helvetica, Arial, sans-serif; }

/*
 * @desc: include secondary (monospace) font-family in your css
 */
/*
 * FUNCTION UTIL - all function that are used for styling value
**/
/*
 * @desc: use this function for margin, padding, width so that all elements stay within a common grid
 * @input:
 * @ex: get-preset-pixel('xs') -> 4px;
 *			get-preset-pixel(6) -> 12px;
 */
/*
 * @desc: return rgba color value for COI custom defined color
 * @ex: get-color('indigo') -> rgba(0, 116, 147, 1)
 */
/*
 * MARGIN UTIL - all mixin, map, variable, placeholder for styling css margin
**/
/*
 * @desc: include/parse margin property in your css
 * @input: $size accepts fixed value ['xs', 'sm', 'md', 'lg', 'xl'] or any positive integer
 *				 $edge accepts string value ['all', 'top', 'bottom', 'left', 'right', 'left right', 'right left', 'top bottom',
 *				 	 'bottom top'], default value is 'all'
 * @output: margin property with specified size
 * @ex: { @include margin('lg') } -> { margin: 24px; }
 */
/*
 * OFFSET UTIL - all placeholder, mixin, map, variable to offset default element setting
**/
/*
 * @desc: offset default margin, padding, line-height for all html elements
 * NOTE: by setting box-sizing to border-box, the margin, padding, border will be calculated as part of the element's width
 */
/*
 * FONT UTIL - all mixin, map, variable, placeholder for styling css padding
**/
/*
 * @desc: include/parse padding property in your css
 * @input: $size accepts fixed value ['xs', 'sm', 'md', 'lg', 'xl'] or any positive integer
 *				 $edge accepts string value ['all', 'top', 'bottom', 'left', 'right', 'left right', 'right left', 'top bottom',
 *				 	 'bottom top'], default value is 'all'
 * @output: padding property with specified size
 * @ex: { @include padding('lg') } -> { padding: 24px; }
 */
/*
 * @desc: include text-color property in your css
 * @input: $color accepts string value ['cisco blue', 'lightest blue', 'indigo', 'red', 'green', 'orange', 'darkest gray', 'mid gray', 'light gray', 'lightest gray']
 * 			or any other color
 *		   $opacity accepts values from 0 to 1, default value is 1
 * @output: text with speficied color;
 * @ex: { @include text-color('cisco blue') } -> { text-color: rgba(0, 188, 235, 1); }
 */
/**
  * @desc: sass-override use util js which is injected by webpack.config
  */
html.coi {
  /*
 * @desc: Override all MUI stylesheet here in this file
 * NOTE: either add the css class here or in another file then import here
 */
  /*
 * @desc: override MUI default padding
 */ }
  html.coi .MuiInputBase-root {
    padding-top: 4px;
    padding-bottom: 4px; }
  html.coi .MuiInput-underline.Mui-error:after {
    color: #e2241a; }
  html.coi .MuiInputLabel-formControl {
    transform: translate(0, 4px) scale(1); }
  html.coi .MuiInputLabel-shrink {
    transform: translate(0, -8px) scale(0.75); }
  html.coi .MuiFormLabel-root.Mui-focused {
    color: #4d4c4c; }
  html.coi .MuiFormHelperText-root {
    margin-left: 0;
    margin-right: 0;
    padding-left: 0;
    padding-right: 0;
    display: none; }
    html.coi .MuiFormHelperText-root.Mui-focused {
      display: block; }
    html.coi .MuiFormHelperText-root.Mui-error {
      color: #e2241a; }
  html.coi .MuiGrid-item {
    padding: 8px; }
  html.coi .MuiButton-root {
    min-width: initial;
    padding-top: 8px;
    padding-bottom: 8px;
    padding-bottom: 6px;
    padding-left: 16px;
    padding-right: 16px;
    border-radius: 16px; }
  html.coi .MuiMenuItem-root {
    min-height: initial;
    padding: 8px; }
  html.coi .MuiFormControlLabel-root {
    margin: 4px;
    padding: 4px;
    flex: auto; }
  html.coi .MuiFormGroup-root {
    align-content: space-evenly; }
  html.coi .MuiFormLabel-root {
    color: #4d4c4c; }
