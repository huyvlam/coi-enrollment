/*
 * BACKGROUND UTIL - all mixin, map, variable, placeholder for styling css background
**/
/*
 * @desc: include background-color property in your css
 * @input: $color accepts string value ['cisco blue', 'lightest blue', 'indigo', 'red', 'green', 'orange', 'darkest gray', 'mid gray', 'light gray', 'lightest gray']
 * 			or any other color
 *		   $opacity accepts values from 0 to 1, default value is 1
 * @output: background with speficied color
 * @ex: { @include background-color('cisco blue', 1) } -> { background-color: rgba(0, 188, 235, 1); }
 */
/*
 * BORDER UTIL - all mixin, map, variable, placeholder for styling css border
 */
/*
 * @desc: include border property in your css
 * @input: $color accepts string value ['cisco blue', 'lightest blue', 'indigo', 'red', 'green', 'orange', 'darkest gray', 'mid gray', 'light gray', 'lightest gray']
 * 			or any other color
		    $edge accepts string value ['all', 'top', 'bottom', 'left', 'right', 'left right', 'right left', 'top bottom',
 *			'bottom top'], default value is 'all'
			$size accepts any size value, ex: 2px, 1em,  default value is 1px
			$style accepts string value ['dotted', 'none', 'hidden', 'dotted', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'], default value is 'solid'
 * @output: border property with specified color, edge, size and style
 * @ex: { @include border('cisco blue') } -> { border: 1px solid rgb(0, 188, 235); }
 */
/*
 * BOX SHADOW UTIL - all mixin, map, variable, placeholder for styling css box shadow
**/
/*
 * @desc: COI, CiscoSans font declaration and styling
 */
@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-weight: 100;
  src: url('/static/fonts/CiscoSansTTExtraLight.woff2') format('woff2'), url('/static/fonts/CiscoSansTTExtraLight.woff') format('woff');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: oblique;
  font-weight: 100;
  src: url('/static/fonts/CiscoSansTTExtraLightOblique.woff2') format('woff2'), url('/static/fonts/CiscoSansTTExtraLightOblique.woff') format('woff');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-weight: 300;
  src: url('/static/fonts/CiscoSansTTLight.woff2') format('woff2'), url('/static/fonts/CiscoSansTTLight.woff') format('woff');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: oblique;
  font-weight: 300;
  src: url('/static/fonts/CiscoSansTTLightOblique.woff2') format('woff2'), url('/static/fonts/CiscoSansTTLightOblique.woff') format('woff');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-weight: 400;
  src: url('/static/fonts/CiscoSansTTRegular.woff2') format('woff2'), url('/static/fonts/CiscoSansTTRegular.woff') format('woff');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'CiscoSans';
  font-style: bold;
  font-weight: 700;
  src: url('/static/fonts/CiscoSansTTBold.woff2') format('woff2'), url('/static/fonts/CiscoSansTTBold.woff') format('woff');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/*
 * DEVICE UTIL - all mixin, map, variable, placeholder for responding css media query
**/
/*
 * FONT UTIL - all mixin, map, variable, placeholder for styling css font
**/
/*
 * @desc: return coi custom defined font-family
 */
/*
 * @desc: return font sise in rem (speficied font size divided by root font size)
 */
/*
 * @desc: return font size in percentage (speficied font size divided by root)
 */
/*
 * @desc: include rem font-size in your css
 */
/*
 * @desc: include percent font-size in your css
 */
/*
 * @desc: wrapper function for rem-font-size with predefined values: xs, sm, md, lg, xl
 * @output: include 'font-size: rem' in your css
 */
/*
 * @desc: include font-weight property in your css
 * @input: $weight accepts string value ['normal', 'bold', 'semibold', 'semilight', 'light']
 *		   $base accepts any integer value, default value is 100
 * @output: font with speficied weight;
 * @ex: { @include font-weight('bold') } -> { font-weight: 700; }
 */
/*
 * @desc: include primary (sans-serif) font-family in your css
 */
/*
 * @desc: include secondary (monospace) font-family in your css
 */
/*
 * FUNCTION UTIL - all function that are used for styling value
**/
/*
 * @desc: use this function for margin, padding, width so that all elements stay within a common grid
 * @input:
 * @ex: get-preset-pixel('xs') -> 4px;
 *			get-preset-pixel(6) -> 12px;
 */
/*
 * @desc: return rgba color value for COI custom defined color
 * @ex: get-color('indigo') -> rgba(0, 116, 147, 1)
 */
/*
 * MARGIN UTIL - all mixin, map, variable, placeholder for styling css margin
**/
/*
 * @desc: include/parse margin property in your css
 * @input: $size accepts fixed value ['xs', 'sm', 'md', 'lg', 'xl'] or any positive integer
 *				 $edge accepts string value ['all', 'top', 'bottom', 'left', 'right', 'left right', 'right left', 'top bottom',
 *				 	 'bottom top'], default value is 'all'
 * @output: margin property with specified size
 * @ex: { @include margin('lg') } -> { margin: 24px; }
 */
/*
 * OFFSET UTIL - all placeholder, mixin, map, variable to offset default element setting
**/
/*
 * @desc: offset default margin, padding, line-height for all html elements
 * NOTE: by setting box-sizing to border-box, the margin, padding, border will be calculated as part of the element's width
 */
/*
 * FONT UTIL - all mixin, map, variable, placeholder for styling css padding
**/
/*
 * @desc: include/parse padding property in your css
 * @input: $size accepts fixed value ['xs', 'sm', 'md', 'lg', 'xl'] or any positive integer
 *				 $edge accepts string value ['all', 'top', 'bottom', 'left', 'right', 'left right', 'right left', 'top bottom',
 *				 	 'bottom top'], default value is 'all'
 * @output: padding property with specified size
 * @ex: { @include padding('lg') } -> { padding: 24px; }
 */
/*
 * @desc: include text-color property in your css
 * @input: $color accepts string value ['cisco blue', 'lightest blue', 'indigo', 'red', 'green', 'orange', 'darkest gray', 'mid gray', 'light gray', 'lightest gray']
 * 			or any other color
 *		   $opacity accepts values from 0 to 1, default value is 1
 * @output: text with speficied color;
 * @ex: { @include text-color('cisco blue') } -> { text-color: rgba(0, 188, 235, 1); }
 */
/* CiscoSans - 100 normal */
@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-display: swap;
  font-weight: 100;
  src: local('CiscoSans light'), local('Cisco-Sans light'), url('../fonts/CiscoSansTTExtraLight.woff2') format('woff2'), url('../fonts/CiscoSansTTExtraLight.woff') format('woff');
  /* Modern Browsers */ }

/* CiscoSans - 700 normal */
@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src: local('CiscoSans bold'), local('Cisco-Sans bold'), url('../fonts/CiscoSansTTBold.woff2') format('woff2'), url('../fonts/CiscoSansTTBold.woff') format('woff');
  /* Modern Browsers */ }

/* CiscoSans - 100 oblique */
@font-face {
  font-family: 'CiscoSans';
  font-style: oblique;
  font-display: swap;
  font-weight: 100;
  src: local('CiscoSans light oblique'), local('Cisco-Sans light oblique'), url('../fonts/CiscoSansTTExtraLightOblique.woff2') format('woff2'), url('../fonts/CiscoSansTTExtraLightOblique.woff') format('woff');
  /* Modern Browsers */ }

/* CiscoSans - 300 normal */
@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-display: swap;
  font-weight: 300;
  src: local('CiscoSans semilight'), local('Cisco-Sans semilight'), url('../fonts/CiscoSansTTLight.woff2') format('woff2'), url('../fonts/CiscoSansTTLight.woff') format('woff');
  /* Modern Browsers */ }

/* CiscoSans - 300 oblique */
@font-face {
  font-family: 'CiscoSans';
  font-style: oblique;
  font-display: swap;
  font-weight: 300;
  src: local('CiscoSans semilight oblique'), local('Cisco-Sans semilight oblique'), url('../fonts/CiscoSansTTLightOblique.woff2') format('woff2'), url('../fonts/CiscoSansTTLightOblique.woff') format('woff');
  /* Modern Browsers */ }

/* CiscoSans - 400 normal */
@font-face {
  font-family: 'CiscoSans';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: local('CiscoSans'), local('Cisco-Sans'), url('../fonts/CiscoSansTTRegular.woff2') format('woff2'), url('../fonts/CiscoSansTTRegular.woff') format('woff');
  /* Modern Browsers */ }

/* CiscoSans - 400 oblique */
@font-face {
  font-family: 'CiscoSans';
  font-style: oblique;
  font-display: swap;
  font-weight: 400;
  src: local('CiscoSans oblique'), local('Cisco-Sans oblique'), url('../fonts/CiscoSansTTRegularOblique.woff2') format('woff2'), url('../fonts/CiscoSansTTRegularOblique.woff') format('woff');
  /* Modern Browsers */ }
